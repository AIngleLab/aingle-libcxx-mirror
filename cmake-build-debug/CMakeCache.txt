# This is the CMakeCache file.
# For build in directory: c:/projects/ainglev2/aingle-libcxx-mirror/cmake-build-debug
# It was generated by CMake: C:/Users/carlo/AppData/Local/JetBrains/Toolbox/apps/CLion/ch-0/203.7148.70/bin/cmake/win/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Debug

//Id string of the compiler for the CodeBlocks IDE. Automatically
// detected when left empty
CMAKE_CODEBLOCKS_COMPILER_ID:STRING=

//The CodeBlocks executable
CMAKE_CODEBLOCKS_EXECUTABLE:FILEPATH=CMAKE_CODEBLOCKS_EXECUTABLE-NOTFOUND

//Additional command line arguments when CodeBlocks invokes make.
// Enter e.g. -j<some_number> to get parallel builds
CMAKE_CODEBLOCKS_MAKE_ARGUMENTS:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//C compiler
CMAKE_C_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/libcxx

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/link.exe

//Program used to build from makefiles.
CMAKE_MAKE_PROGRAM:STRING=nmake

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=libcxx

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Statically link the LLVM unwinder.
LIBCXXABI_ENABLE_STATIC_UNWINDER:BOOL=OFF

//Build and use the LLVM unwinder.
LIBCXXABI_USE_LLVM_UNWINDER:BOOL=OFF

//A semicolon separated list of ABI macros to define in the site
// config header.
LIBCXX_ABI_DEFINES:STRING=

//Ignore auto-detection and force use of the Itanium ABI.
LIBCXX_ABI_FORCE_ITANIUM:BOOL=OFF

//Ignore auto-detection and force use of the Microsoft ABI.
LIBCXX_ABI_FORCE_MICROSOFT:BOOL=OFF

//The inline ABI namespace used by libc++. It defaults to __n where
// `n` is the current ABI version.
LIBCXX_ABI_NAMESPACE:STRING=

//Unstable ABI of libc++.
LIBCXX_ABI_UNSTABLE:BOOL=OFF

//ABI version of libc++. Can be either 1 or 2, where 2 is currently
// not stable. Defaults to 1.
LIBCXX_ABI_VERSION:STRING=1

//Use alternate GCC toolchain when building the native benchmarks
LIBCXX_BENCHMARK_NATIVE_GCC_TOOLCHAIN:STRING=

//Build the benchmarks against the specified native STL.
//\n         The value must be one of libc++/libstdc++
LIBCXX_BENCHMARK_NATIVE_STDLIB:STRING=

//Arguments to pass when running the benchmarks using check-cxx-benchmarks
LIBCXX_BENCHMARK_TEST_ARGS:STRING=--benchmark_min_time=0.01

//Build 32 bit libc++.
LIBCXX_BUILD_32_BITS:BOOL=OFF

//Build libc++ with an externalized threading library.
//\n     This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON
LIBCXX_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF

//Configure libcxx for use within an IDE
LIBCXX_CONFIGURE_IDE:BOOL=OFF

//The Profile-rt library used to build with code coverage
LIBCXX_COVERAGE_LIBRARY:STRING=

//Specify C++ ABI library to use.
LIBCXX_CXX_ABI:STRING=default

//The path to libc++abi library.
LIBCXX_CXX_ABI_LIBRARY_PATH:PATH=C:/projects/ainglev2/aingle-libcxx-mirror/cmake-build-debug/lib

//Disable #warnings about conflicting macros.
LIBCXX_DISABLE_MACRO_CONFLICT_WARNINGS:BOOL=OFF

//Use and install a linker script for the given ABI library
LIBCXX_ENABLE_ABI_LINKER_SCRIPT:BOOL=OFF

//Enable assertions independent of build mode.
LIBCXX_ENABLE_ASSERTIONS:BOOL=OFF

//Use exceptions.
LIBCXX_ENABLE_EXCEPTIONS:BOOL=ON

//Build libc++experimental.a
LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY:BOOL=ON

//Build filesystem as part of the main libc++ library
LIBCXX_ENABLE_FILESYSTEM:BOOL=OFF

//Build libc++ with support for the global filesystem namespace.
LIBCXX_ENABLE_GLOBAL_FILESYSTEM_NAMESPACE:BOOL=ON

//Build libc++ with support for a monotonic clock.
//\n   This option may only be set to OFF when LIBCXX_ENABLE_THREADS=OFF.
LIBCXX_ENABLE_MONOTONIC_CLOCK:BOOL=ON

//Build libc++ with definitions for operator new/delete. This option
// can
//\n    be used to disable the definitions when libc++abi is expected
// to provide
//\n    them
LIBCXX_ENABLE_NEW_DELETE_DEFINITIONS:BOOL=ON

//Compile with pedantic enabled.
LIBCXX_ENABLE_PEDANTIC:BOOL=OFF

//Use run time type information.
LIBCXX_ENABLE_RTTI:BOOL=ON

//Build libc++ as a shared library.
LIBCXX_ENABLE_SHARED:BOOL=ON

//Build libc++ as a static library.
LIBCXX_ENABLE_STATIC:BOOL=ON

//Use a static copy of the ABI library when linking libc++.
//\n   This option cannot be used with LIBCXX_ENABLE_ABI_LINKER_SCRIPT.
LIBCXX_ENABLE_STATIC_ABI_LIBRARY:BOOL=OFF

//Build libc++ with support for stdin/std::cin.
LIBCXX_ENABLE_STDIN:BOOL=ON

//Build libc++ with support for stdout/std::cout.
LIBCXX_ENABLE_STDOUT:BOOL=ON

//Build libc++ with support for threads.
LIBCXX_ENABLE_THREADS:BOOL=ON

//Build libc++ with support for thread-unsafe C functions
LIBCXX_ENABLE_THREAD_UNSAFE_C_FUNCTIONS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBCXX_ENABLE_WERROR:BOOL=OFF

//Executor to use when running tests.
LIBCXX_EXECUTOR:STRING=None

//Use alternate GCC toolchain.
LIBCXX_GCC_TOOLCHAIN:STRING=

//Enable generating code coverage.
LIBCXX_GENERATE_COVERAGE:BOOL=OFF

//Build libc++ with an externalized threading API.
//\n   This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON.
LIBCXX_HAS_EXTERNAL_THREAD_API:BOOL=OFF

//Build libc++ with support for the Musl C library
LIBCXX_HAS_MUSL_LIBC:BOOL=OFF

//Ignore auto-detection and force use of pthread API
LIBCXX_HAS_PTHREAD_API:BOOL=OFF

//Ignore auto-detection and force use of win32 thread API
LIBCXX_HAS_WIN32_THREAD_API:BOOL=OFF

//Do not export any symbols from the static library.
LIBCXX_HERMETIC_STATIC_LIBRARY:BOOL=OFF

//Enable per TU ABI insulation by default. To be used by vendors.
LIBCXX_HIDE_FROM_ABI_PER_TU_BY_DEFAULT:BOOL=OFF

//Build the libc++ benchmarks and their dependencies
LIBCXX_INCLUDE_BENCHMARKS:BOOL=ON

//Build the libc++ documentation.
LIBCXX_INCLUDE_DOCS:BOOL=OFF

//Build the libc++ tests.
LIBCXX_INCLUDE_TESTS:BOOL=OFF

//Install libc++experimental.a
LIBCXX_INSTALL_EXPERIMENTAL_LIBRARY:BOOL=ON

//Install the libc++ headers.
LIBCXX_INSTALL_HEADERS:BOOL=ON

//Define libc++ header destination prefix.
LIBCXX_INSTALL_HEADER_PREFIX:STRING=

//Install the libc++ library.
LIBCXX_INSTALL_LIBRARY:BOOL=ON

//Define libc++ destination prefix.
LIBCXX_INSTALL_PREFIX:STRING=

//Install the shared libc++ library.
LIBCXX_INSTALL_SHARED_LIBRARY:BOOL=ON

//Install the static libc++ library.
LIBCXX_INSTALL_STATIC_LIBRARY:BOOL=ON

//Install libc++ support headers.
LIBCXX_INSTALL_SUPPORT_HEADERS:BOOL=ON

//Version of libc++abi's ABI to re-export from libc++ when re-exporting
// is enabled.
//\n                                               Note that this
// is not related to the version of libc++'s ABI itself!
LIBCXX_LIBCPPABI_VERSION:STRING=2

//Path to a file.
LIBCXX_LIBCXXABI_INCLUDES_INTERNAL:PATH=LIBCXX_LIBCXXABI_INCLUDES_INTERNAL-NOTFOUND

//Define suffix of library directory name (32/64)
LIBCXX_LIBDIR_SUFFIX:STRING=

//Configuration variant to use for LIT.
LIBCXX_LIT_VARIANT:STRING=libcxx

//Enable overwriting darwins libc++ installation.
LIBCXX_OVERRIDE_DARWIN_INSTALL:BOOL=OFF

//internal option to change build dialect
LIBCXX_STANDARD_VER:STRING=c++11

//Use alternate sysroot.
LIBCXX_SYSROOT:STRING=

//TargetInfo to use when setting up test environment.
LIBCXX_TARGET_INFO:STRING=libcxx.test.target_info.LocalTI

//Use alternate target triple.
LIBCXX_TARGET_TRIPLE:STRING=

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_COMPILER_FLAGS:STRING=

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_LINKER_FLAGS:STRING=

//Use compiler-rt instead of libgcc
LIBCXX_USE_COMPILER_RT:BOOL=OFF

//Path to a program.
LLVM_CONFIG_PATH:FILEPATH=LLVM_CONFIG_PATH-NOTFOUND

//Define the sanitizer used to build the library and tests
LLVM_USE_SANITIZER:STRING=

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=C:/Python39/python.exe

//Dependencies for the target
cxx_experimental_LIB_DEPENDS:STATIC=general;cxx_shared;

//Dependencies for the target
cxx_shared_LIB_DEPENDS:STATIC=general;ucrtd;general;vcruntimed;general;msvcrtd;general;msvcprtd;general;iso_stdio_wide_specifiers;

//Dependencies for the target
cxx_static_LIB_DEPENDS:STATIC=general;ucrtd;general;vcruntimed;general;msvcrtd;general;msvcprtd;general;iso_stdio_wide_specifiers;

//Value Computed by CMake
libcxx_BINARY_DIR:STATIC=C:/projects/ainglev2/aingle-libcxx-mirror/cmake-build-debug

//Value Computed by CMake
libcxx_SOURCE_DIR:STATIC=C:/projects/ainglev2/aingle-libcxx-mirror


########################
# INTERNAL cache entries
########################

//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/projects/ainglev2/aingle-libcxx-mirror/cmake-build-debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=17
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=5
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Users/carlo/AppData/Local/JetBrains/Toolbox/apps/CLion/ch-0/203.7148.70/bin/cmake/win/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Users/carlo/AppData/Local/JetBrains/Toolbox/apps/CLion/ch-0/203.7148.70/bin/cmake/win/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Users/carlo/AppData/Local/JetBrains/Toolbox/apps/CLion/ch-0/203.7148.70/bin/cmake/win/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=CodeBlocks
//CXX compiler system include directories
CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_INCLUDE_DIRS:INTERNAL=C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\include;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\shared;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\um;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\winrt;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\cppwinrt
//C compiler system include directories
CMAKE_EXTRA_GENERATOR_C_SYSTEM_INCLUDE_DIRS:INTERNAL=C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\include;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\shared;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\um;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\winrt;C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\cppwinrt
//Name of generator.
CMAKE_GENERATOR:INTERNAL=NMake Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/projects/ainglev2/aingle-libcxx-mirror
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=5
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Users/carlo/AppData/Local/JetBrains/Toolbox/apps/CLion/ch-0/203.7148.70/bin/cmake/win/share/cmake-3.17
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[C:/Python39/python.exe][v3.9.1()]
//STRINGS property for variable: LIBCXX_CXX_ABI
LIBCXX_CXX_ABI-STRINGS:INTERNAL=none;default;libcxxabi;libcxxrt;libstdc++;libsupc++;vcruntime
//Test LIBCXX_HAS_EHSC_FLAG
LIBCXX_HAS_EHSC_FLAG:INTERNAL=1
//Test LIBCXX_HAS_NO_EHA_FLAG
LIBCXX_HAS_NO_EHA_FLAG:INTERNAL=1
//Test LIBCXX_HAS_NO_EHS_FLAG
LIBCXX_HAS_NO_EHS_FLAG:INTERNAL=1
//Test LIBCXX_HAS_NO_GR_FLAG
LIBCXX_HAS_NO_GR_FLAG:INTERNAL=1
//Test LIBCXX_HAS_NO_WX_FLAG
LIBCXX_HAS_NO_WX_FLAG:INTERNAL=1
//Test LIBCXX_HAS_WX_FLAG
LIBCXX_HAS_WX_FLAG:INTERNAL=1
//ADVANCED property for variable: LIBCXX_OVERRIDE_DARWIN_INSTALL
LIBCXX_OVERRIDE_DARWIN_INSTALL-ADVANCED:INTERNAL=1
//Test LIBCXX_SUPPORTS_EHSC_FLAG
LIBCXX_SUPPORTS_EHSC_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG
LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_NOSTDINCXX_FLAG
LIBCXX_SUPPORTS_NOSTDINCXX_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_STD_COLON_CXX11_FLAG
LIBCXX_SUPPORTS_STD_COLON_CXX11_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_STD_EQ_CXX11_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX11_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_STD_EQ_CXX14_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX14_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_WALL_FLAG
LIBCXX_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_WEXTRA_FLAG
LIBCXX_SUPPORTS_WEXTRA_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG
LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_WNO_ERROR_FLAG
LIBCXX_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG
LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG
LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG
LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_W_FLAG
LIBCXX_SUPPORTS_W_FLAG:INTERNAL=
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
algorithms.partition_point_REPORTED:INTERNAL=ON
algorithms_REPORTED:INTERNAL=ON
filesystem_REPORTED:INTERNAL=ON
function_REPORTED:INTERNAL=ON
ordered_set_REPORTED:INTERNAL=ON
string_REPORTED:INTERNAL=ON
stringstream_REPORTED:INTERNAL=ON
unordered_set_operations_REPORTED:INTERNAL=ON
util_smartptr_REPORTED:INTERNAL=ON
vector_operations_REPORTED:INTERNAL=ON

